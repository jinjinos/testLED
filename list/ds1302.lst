C51 COMPILER V9.53.0.0   DS1302                                                            09/19/2016 16:10:28 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\out\ds1302.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\ds1302.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEX
                    -TEND PRINT(.\list\ds1302.lst) OBJECT(.\out\ds1302.obj)

line level    source

   1          
   2          //时钟芯片DS1302的驱动程序
   3          #include "includes.h"
   4          
   5          //DS1302引脚连接定义
   6          sbit T_CLK = P3^5;                      //串行时钟线
   7          sbit T_IO  = P3^6;                      //数据管脚
   8          sbit T_RST = P3^7;                      //复位管脚
   9          
  10          
  11          void DS1302_Init(void)
  12          {
  13   1              unsigned char check = 0xAA;
  14   1              unsigned char time_Init[] = {0x16,0x03,0x09,0x14,0x09,0x29,0x00};
  15   1              
  16   1      //      T_RST_CLR;
  17   1      //      T_CLK_CLR;
  18   1      
  19   1              if(Read_DS1302(ds1302_check_add) != check)
  20   1              {
  21   2                      //初始化时间
  22   2                      DS1302_Write_Time(time_Init);
  23   2                      P2 = 0xFE;
  24   2                      //写入初始化标志
  25   2                      DS1302_Write_Check(check);
  26   2              }
  27   1              else
  28   1              {
  29   2                      printf("DS1302 is running!\r\n");
  30   2              }
  31   1      }
  32          
  33          
  34          //往DS1302写入一个字节的数据  低位在前
  35          void RT_Write_Byte(unsigned char sdata)
  36          {
  37   1              unsigned char i = 0;
  38   1              
  39   1      //      T_RST_SET;              //启动DS1302总线
  40   1              
  41   1              for(i = 0;i < 8 ; i++)
  42   1              {
  43   2      //              T_IO = sdata & 0x01;
  44   2                      if(sdata & 0x01)
  45   2                      {
  46   3                              T_IO_SET;
  47   3                      }
  48   2                      else
  49   2                      {
  50   3                              T_IO_CLR;
  51   3                      }
  52   2                      T_CLK_SET;                      //时钟脉冲
  53   2                      T_CLK_CLR;
  54   2                      sdata >>= 1;
C51 COMPILER V9.53.0.0   DS1302                                                            09/19/2016 16:10:28 PAGE 2   

  55   2              }
  56   1              
  57   1      //      T_RST_CLR;
  58   1      }
  59          
  60          
  61          //从DS1302读取一个字节的数据            低位在前
  62          unsigned char RT_Read_Byte(void)
  63          {
  64   1              unsigned char  i = 0;
  65   1              unsigned char temp = 0;
  66   1      //      T_RST_SET;              //启动DS1302时钟
  67   1              
  68   1              for(i = 0; i < 8;i++)
  69   1              {
  70   2                      temp >>= 1;
  71   2                      if(T_IO)
  72   2                      {
  73   3                              temp |= 0x80;
  74   3                      }
  75   2                      else
  76   2                      {
  77   3                              temp &= 0x7F;
  78   3                      }
  79   2                      T_CLK_SET;
  80   2                      T_CLK_CLR;
  81   2              }
  82   1      //      T_RST_CLR;
  83   1              return temp;
  84   1      }
  85          
  86          //向DS1302写入数据 
  87          //@addr 要写入的地址，@wdata 要写入的数据
  88          void Write_DS1302(unsigned char addr,unsigned char wdata)
  89          {
  90   1              T_RST_CLR;
  91   1              T_CLK_CLR;
  92   1              T_RST_SET;
  93   1              addr &= 0xFE;                   //最低位清零，写入模式
  94   1              RT_Write_Byte(addr);    //写入地址
  95   1              RT_Write_Byte(wdata);   //写入数据
  96   1              T_CLK_SET;
  97   1              T_RST_CLR;
  98   1      }
  99          
 100          
 101          //从DS1302中读取数据
 102          unsigned char Read_DS1302(unsigned char addr)
 103          {
 104   1              unsigned char sdata;
 105   1              
 106   1              T_RST_CLR;
 107   1              T_CLK_CLR;
 108   1              T_RST_SET;
 109   1              addr |= 0x01;                   //最低位置1，读模式
 110   1              RT_Write_Byte(addr);
 111   1              sdata = RT_Read_Byte(); 
 112   1              T_CLK_SET;
 113   1              T_RST_CLR;
 114   1              return sdata;
 115   1      }
 116          
C51 COMPILER V9.53.0.0   DS1302                                                            09/19/2016 16:10:28 PAGE 3   

 117          
 118          //向DS1302写入时间
 119          void DS1302_Write_Time(unsigned char *pTime)
 120          {
 121   1              unsigned char i = 0;
 122   1              unsigned char ds1302_add = ds1302_year_add;
 123   1              
 124   1              Write_DS1302(ds1302_control_add,0x00);  //关闭写保护
 125   1              Write_DS1302(ds1302_sec_add,0x80);      //暂停  ds1302_sec_add的最高位CH为1，则停止工作
 126   1      //      Write_DS1302(ds1302_charger_add,0xa9);  //涓流充电
 127   1              
 128   1              for(i = 0; i < 7; i++)
 129   1              {
 130   2                      //年 星期 月 日 时 分 秒
 131   2                      Write_DS1302(ds1302_add,*(pTime + i));
 132   2                      ds1302_add -= 2;
 133   2              }
 134   1              
 135   1              /*
 136   1              Write_DS1302(ds1302_year_add,pTime[0]);         //年
 137   1              Write_DS1302(ds1302_month_add,pTime[2]);                //月
 138   1              Write_DS1302(ds1302_date_add,pTime[3]);         //日
 139   1              Write_DS1302(ds1302_day_add,pTime[1]);          //周
 140   1              Write_DS1302(ds1302_hr_add,pTime[4]);           //时            24???
 141   1              Write_DS1302(ds1302_min_add,pTime[5]);          //分
 142   1              Write_DS1302(ds1302_sec_add,pTime[6]);          //秒
 143   1              Write_DS1302(ds1302_day_add,pTime[1]);          //周
 144   1              */
 145   1              Write_DS1302(ds1302_control_add,0x80);  //打开写保护
 146   1      }
 147          
 148          
 149          //从DS1302中读取时间
 150          void  DS1302_Read_Time(unsigned char * time_buf)
 151          {
 152   1              unsigned char i = 0;
 153   1      //      unsigned char time_H,time_L;
 154   1              unsigned char * pTime = time_buf;
 155   1              unsigned char ds1302_addr = ds1302_year_add;
 156   1              
 157   1              
 158   1              for(i = 0; i < 7; i++)
 159   1              {
 160   2                      //年 星期 月 日 时 分 秒
 161   2                      *(pTime + i) = Read_DS1302(ds1302_addr);
 162   2                      ds1302_addr -= 2;
 163   2              }
 164   1              
 165   1              /*
 166   1              time_buf[0]=Read_DS1302(ds1302_year_add);               //年
 167   1              time_buf[1]=Read_DS1302(ds1302_day_add);                //周
 168   1              time_buf[2]=Read_DS1302(ds1302_month_add);              //月
 169   1              time_buf[3]=Read_DS1302(ds1302_date_add);               //日
 170   1              time_buf[4]=Read_DS1302(ds1302_hr_add);                 //时
 171   1              time_buf[5]=Read_DS1302(ds1302_min_add);                //分
 172   1              time_buf[6]=(Read_DS1302(ds1302_sec_add)) & 0x7F;//秒 
 173   1      
 174   1              */
 175   1              
 176   1      //      pTime = time_buf;
 177   1              /*
 178   1              //将BCD码转换为十进制数
C51 COMPILER V9.53.0.0   DS1302                                                            09/19/2016 16:10:28 PAGE 4   

 179   1              for(i = 0; i < 7; i++)
 180   1              {
 181   1                      time_H = *(pTime + i) / 16;             //十位
 182   1                      time_L = *(pTime + i) % 16;             //个位
 183   1                      *(pTime + i) = time_H * 10 + time_L ;
 184   1              }
 185   1              */
 186   1              
 187   1      }
 188          
 189          //向DS1302写入标志位
 190          void DS1302_Write_Check(unsigned char check)
 191          {
 192   1              Write_DS1302(ds1302_control_add,0x00);  //关闭写保护
 193   1              Write_DS1302(ds1302_check_add,check);   //写入初始化标志
 194   1              Write_DS1302(ds1302_control_add,0x80);  //打开写保护
 195   1      }
 196          
 197          
 198          //DS1302测试程序
 199          void TestDS1302(void)
 200          {
 201   1              unsigned char time_buf[7] = {'\0'};
 202   1              unsigned char i = 0;
 203   1              
 204   1              while(1)
 205   1              {
 206   2                      switch(tFlag)
 207   2                      {
 208   3                              case 1:
 209   3                                      tFlag = 0;
 210   3                                      if(recMessage.rNum == 7)
 211   3                                      {
 212   4                                              for(i = 0; i < recMessage.rNum;i++)
 213   4                                              {
 214   5                                                      time_buf[i] = MsgOut(&recMessage);
 215   5                                              }
 216   4                                              DS1302_Write_Time(time_buf);
 217   4                                              printf("Write Time to DS1302 successed\r\n");
 218   4                                      }
 219   3                                      break;
 220   3                              case 2:
 221   3                                      tFlag = 0;
 222   3                                      DS1302_Read_Time(time_buf);
 223   3                                      //按照yyyy-MM-dd hh24:mi:ss的格式串口输出
 224   3                                      printf("20%02x-%02x-%02x %02x:%02x:%02x\r\n",\
 225   3                                              (int)time_buf[0],(int)time_buf[2],(int)time_buf[3],(int)time_buf[4],(int)time_buf[5],(int)time_buf[6]
             -);
 226   3                                      break;
 227   3                              case 3:
 228   3                                      tFlag = 0;
 229   3                                      for(i = 0; i < recMessage.rNum ;i++)
 230   3                                      {
 231   4                                              MsgOut(&recMessage);
 232   4                                      }
 233   3                                      if(MsgIsEmpty(recMessage))
 234   3                                      {
 235   4                                              printf("clear Msg\r\n");
 236   4                                      }
 237   3                                      else
 238   3                                      {
 239   4                                              printf("I don't know what is wrong!");
C51 COMPILER V9.53.0.0   DS1302                                                            09/19/2016 16:10:28 PAGE 5   

 240   4                                      }
 241   3                                      break;
 242   3                              default:break;
 243   3                      }
 244   2                      
 245   2                      
 246   2      //              delayNms(10);
 247   2                      
 248   2              }
 249   1      }
 250          
 251          
 252          
 253          
 254          
 255          
 256          
 257          
 258          
 259          
 260          
 261          
 262          
 263          
 264          
 265          
 266          
 267          
 268          
 269          
 270          
 271          
 272          
 273          
 274          
 275          
 276          
 277          
 278          
 279          
 280          
 281          
 282          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    619    ----
   CONSTANT SIZE    =    142    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
