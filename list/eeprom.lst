C51 COMPILER V9.53.0.0   EEPROM                                                            09/20/2016 17:30:36 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\out\eeprom.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE src\eeprom.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc) DEBUG OBJECTEX
                    -TEND PRINT(.\list\eeprom.lst) OBJECT(.\out\eeprom.obj)

line level    source

   1          #include "includes.h"
   2          
   3          
   4          void IapIdle(void)
   5          {
   6   1              IAP_CONTR = 0;                  //Close IAP function
   7   1          IAP_CMD = 0;                    //Clear command to standby
   8   1          IAP_TRIG = 0;                   //Clear trigger register
   9   1          IAP_ADDRH = 0x80;               //Data ptr point to non-EEPROM area
  10   1          IAP_ADDRL = 0;                  //Clear IAP address to prevent misuse
  11   1      }
  12          
  13          
  14          //从EEPROM读取一个字节
  15          unsigned char EEP_ReadByte(unsigned int addr)
  16          {
  17   1              unsigned int dat;       
  18   1              
  19   1              IAP_CONTR = ENABLE_IAP;
  20   1              IAP_CMD   = CMD_READ;
  21   1              IAP_ADDRL = (unsigned char)addr;
  22   1              IAP_ADDRH = (unsigned char)(addr >> 8);
  23   1              //设置IAP命令触发
  24   1              IAP_TRIG = 0x5A;
  25   1              IAP_TRIG = 0xA5;
  26   1              _nop_();
  27   1              dat = IAP_DATA;
  28   1              IapIdle();
  29   1              
  30   1              return dat;
  31   1      }
  32          
  33          //从EEPROM中读取多个字节
  34          void EEP_Read(unsigned int addr,unsigned int number,unsigned char *pbuf)
  35          {
  36   1              while(number--)
  37   1              {
  38   2                      *pbuf = EEP_ReadByte(addr++);
  39   2                      pbuf++;
  40   2              }
  41   1      }
  42          
  43          
  44          //向EEPROM写入一个字节的数据
  45          void EEP_WriteByte(unsigned int addr,unsigned char dat)
  46          {
  47   1              IAP_CONTR = ENABLE_IAP;
  48   1              IAP_CMD   = CMD_PROGRAM;
  49   1              IAP_ADDRL = (unsigned char)addr;
  50   1              IAP_ADDRH = (unsigned char)(addr >> 8);
  51   1              IAP_DATA  = dat;
  52   1              //设置IAP命令触发
  53   1              IAP_TRIG = 0x5A;
  54   1              IAP_TRIG = 0xA5;
C51 COMPILER V9.53.0.0   EEPROM                                                            09/20/2016 17:30:36 PAGE 2   

  55   1              _nop_();
  56   1              IapIdle();
  57   1      }
  58          
  59          //向EEPROM中写入多个字节 1-255
  60          void EEP_Write(unsigned int addr,unsigned int number,unsigned char *pdat)
  61          {
  62   1              while(number--)
  63   1              {
  64   2                      EEP_WriteByte(addr++,*pdat);
  65   2                      pdat++;
  66   2              }
  67   1      }
  68          
  69          //扇区擦除
  70          void EEP_EraseSector(unsigned int addr)
  71          {
  72   1              IAP_CONTR = ENABLE_IAP;
  73   1              IAP_CMD   = CMD_ERASE;
  74   1              IAP_ADDRL = (unsigned char)addr;
  75   1              IAP_ADDRH = (unsigned char)(addr >> 8);
  76   1              
  77   1              IAP_TRIG  = 0x5A;
  78   1              IAP_TRIG  = 0xA5;
  79   1              _nop_();
  80   1              //设置IAP命令触发
  81   1              IapIdle();
  82   1      }
  83          
  84          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    191    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
